; Start a new pool named 'www'.
[www]

; Unix user/group of processes
; if set to www-data, ensure your HostPath mounted code has permissions for www-data
user = www-data
group = www-data

; Listen to a Unix socket (default for Debian PHP-FPM)
; Apache's php8.3-fpm configuration usually uses this.
listen = /run/php/php8.3-fpm.sock

; Set permissions for the Unix socket
listen.owner = www-data
listen.group = www-data
listen.mode = 0660

; Choose how the process manager will control the number of child processes.
;   'static'     - a fixed number of child processes (pm.max_children)
;   'dynamic'    - the number of child processes are set dynamically based on the
;                  following parameters:
;                    pm.max_children
;                    pm.start_servers
;                    pm.min_spare_servers
;                    pm.max_spare_servers
;   'ondemand'   - the processes is created when needed, on the first request.
;                  They are killed when idle.
pm = dynamic
pm.max_children = 5
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3

; The number of requests each child process should execute before respawning.
; Useful for working around memory leaks in 3rd party libraries.
pm.max_requests = 500

; Redirect worker stdout and stderr to master's stdout and stderr.
catch_workers_output = yes

; Clear environment in FPM workers
; Prevents passing sensitive host env vars to PHP processes
clear_env = no

; Custom environment variables specific to this pool
; You can add PHP specific ENV vars here if needed
; env[APP_ENV] = production 